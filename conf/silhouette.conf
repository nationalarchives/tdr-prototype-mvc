silhouette {

  # Authenticator settings
  authenticator.cookieName="authenticator"
  authenticator.cookiePath="/"
  authenticator.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  authenticator.httpOnlyCookie=true
  authenticator.sameSite="Lax"
  authenticator.useFingerprinting=true
  authenticator.authenticatorIdleTimeout=30 minutes
  authenticator.authenticatorExpiry=12 hours

  authenticator.rememberMe.cookieMaxAge=30 days
  authenticator.rememberMe.authenticatorIdleTimeout=5 days
  authenticator.rememberMe.authenticatorExpiry=30 days

  authenticator.signer.key = "[changeme]" // A unique encryption key
  authenticator.crypter.key = "[changeme]" // A unique encryption key

  # CSRF state item handler settings
  csrfStateItemHandler.cookieName="OAuth2State"
  csrfStateItemHandler.cookiePath="/"
  csrfStateItemHandler.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  csrfStateItemHandler.httpOnlyCookie=true
  csrfStateItemHandler.sameSite="Lax"
  csrfStateItemHandler.expirationTime=5 minutes

  csrfStateItemHandler.signer.key = "[changeme]" // A unique encryption key

  # Social state handler
  socialStateHandler.signer.key = "[changeme]" // A unique encryption key

  # Auth0 provider
  auth0 {
    authorizationURL="https://tna-tdr-prototype.eu.auth0.com/authorize"
    accessTokenURL="https://tna-tdr-prototype.eu.auth0.com/oauth/token"
    apiURL="https://tna-tdr-prototype.eu.auth0.com/userinfo"
    redirectURL="http://localhost:9000/authenticate/sso"
    scope="openid email offline_access"
    clientID=${?AUTH0_CLIENT_ID}
    clientSecret=${?AUTH0_CLIENT_SECRET}
  }
}